library ieee;
use ieee.std_logic_1164.all;

entity fet_dec_buff is
    port(
        rst, clk,flush: in std_logic;
        instruction_in: in std_logic_vector(15 downto 0);
        reg1_addr, reg1_addr_buffer: out std_logic_vector(2 downto 0);
        reg2_addr, reg2_addr_buffer: out std_logic_vector(2 downto 0);
        instruction_out, immediate_value: out std_logic_vector(15 downto 0);
        stall_enable: in std_logic
    );
end fet_dec_buff;

architecture arch of fet_dec_buff is
begin
    process(rst,clk)
    begin
        if (rst = '1' or flush = '1') then
            instruction_out <= (others => '0');
            reg1_addr <= (others => '0');
            reg2_addr <= (others => '0');
            reg1_addr_buffer <= (others => '0');
            reg2_addr_buffer <= (others => '0');
            immediate_value <= (others => '0');
        elsif rising_edge(clk) then
            if stall_enable = '0' then
                instruction_out <= instruction_in;
                reg1_addr <= instruction_in(11 downto 9);
                reg2_addr <= instruction_in(8 downto 6);
                reg1_addr_buffer <= instruction_in(11 downto 9);
                reg2_addr_buffer <= instruction_in(8 downto 6);
                immediate_value <= instruction_in;
            else
                null;
            end if;
        end if;
    end process;
end arch ;